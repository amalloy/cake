#!/usr/bin/env ruby
# Save your fork, there's cake!"

require 'open-uri'

def get(url, dest)
  open("#{dest}/#{File.basename(url)}", "wb").write(open(url))
end

def cake(*args)
  system %Q( java -cp #{$classpath} clojure.main -e "(use 'cake)(-main)" /dev/null #{args.join(' ')} )
end

file = File.readlink(__FILE__) rescue __FILE__
root = File.dirname(File.dirname(file))
lib  = "#{root}/lib"
jar  = "#{root}/lib/cake.jar"
$classpath = File.exists?(jar) ? jar : "#{root}/src/:#{root}/lib/*"

# Bootstap cake dependencies.
if not File.exists?(lib)
  url ="http://github.com/downloads/ninjudd/cake-standalone/cake.jar"
  echo "fetching cake standalone jar from #{url}..."
  File.makedirs(lib)
  get(url, lib)
end

if not File.exists?("pom.xml") or test(?>, "project.clj", "pom.xml") and ARGV.first != "deps"
  cake("deps")
end

cake(*ARGV)
